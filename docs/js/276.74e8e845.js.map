{"version":3,"file":"js/276.74e8e845.js","mappings":"gaAqBA,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,GAAaC,EAAAA,EAAAA,IAAI,IACjBC,GAAWD,EAAAA,EAAAA,IAAI,IACfE,GAAWF,EAAAA,EAAAA,IAAI,IACfG,GAAUH,EAAAA,EAAAA,IAAI,IACdI,EAAO,IAAIC,KACXC,EAAQF,EAAKG,WAAW,EACxBC,EAAMJ,EAAKK,WAGJT,EAAAA,EAAAA,IAAI,IAGjB,IAAIU,EAASb,EAAMc,QAAQC,OACvBC,EAAShB,EAAMc,QAAQG,OAI3B,SAASC,EAAQC,GACf,MAAMC,EAAMD,EAASE,OAAOC,SAC3BtB,EAAMuB,OAAO,SAASH,EAAII,QAAQ,IAClC,MAAMC,EAAMN,EAASE,OAAOK,UAC5B1B,EAAMuB,OAAO,SAASE,EAAID,QAAQ,GACrC,CACA,SAASG,IACPC,MAAM,oBACR,CACAC,UAAUC,YAAYC,mBAAmBb,EAAQS,GACjDK,YAAW,KACTC,GAAS,GACT,KAEF,MAAMA,EAAUC,UACV,MAAMC,EAAU,mCAGhB,IAAIC,EAAiB,CACnBC,OAAQ,MACRC,SAAU,UAMb,MAAMC,QAAeC,MAAO,uDAAsD3B,SAAcG,mBAAwBmB,IAAWC,GAC7HK,QAAeF,EAAOG,OACtBC,EAAYC,KAAKC,MAAMJ,GAC7BK,QAAQC,IAAIJ,GACZzC,EAAW8C,MAAQL,EACnBvC,EAAS4C,MAAQL,GAAWV,QAAQ,IAAIgB,KACxC5C,EAAS2C,MAAQL,GAAWV,QAAQ,IAAIiB,YACxC5C,EAAQ0C,OAASL,GAAWM,MAAME,KAAO,QAAQ3B,QAAQ,EAAE,E,+TClEhE,MAAM4B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://baby1/./src/views/Today_weather.vue","webpack://baby1/./src/views/Today_weather.vue?48de"],"sourcesContent":["<template>\r\n  <div class=\"location\">\r\n    <div class=\"twrap\">\r\n      <div class=\"titlewrap\">\r\n        <h2 class=\"city\">{{ nowweather.name }}</h2>\r\n      </div>\r\n      <div class=\"maint\">\r\n        \r\n        <p>{{month}}월 {{ day }}일 {{ weather2 }}</p>\r\n          <p style=\"font-size: 3em;\">{{ nowtemp }}&#8451;</p>\r\n          <p style=\"font-size: 2em; font-weight: bold;\">{{ weather1 }}</p>\r\n        \r\n      </div>\r\n\r\n    </div>\r\n  </div>  \r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref } from 'vue'\r\nimport { useStore } from 'vuex';\r\nconst store = useStore()\r\nconst nowweather = ref([])\r\nconst weather1 = ref('')\r\nconst weather2 = ref('')\r\nconst nowtemp = ref('')\r\nconst date = new Date()\r\nconst month = date.getMonth()+1\r\nconst day = date.getDate()\r\n// const whereRu = ref('서울')\r\n// const temp = ref('맑음')\r\nconst imgs = ref('')\r\n// const city = 'Seoul'\r\n// const lang = 'kr'\r\nlet nowlat = store.getters.getlat\r\nlet nowlon = store.getters.getlon\r\n// const initialLat = 36.5683\r\n// const initialLon = 126.9778\r\n// const API_key = 'b6936804ece7929668756f2462b592cc'\r\nfunction onGeoOk(position) {\r\n  const lat = position.coords.latitude;\r\n   store.commit('setlat',lat.toFixed(4))\r\n   const lon = position.coords.longitude;\r\n   store.commit('setlon',lon.toFixed(4))\r\n}\r\nfunction errorGeo(){\r\n  alert('GEO 사용 설정을 해야합니다.')\r\n}\r\nnavigator.geolocation.getCurrentPosition(onGeoOk,errorGeo)\r\nsetTimeout(()=>{\r\n  weather()\r\n},300)\r\n\r\nconst weather = async () => {\r\n      const API_key = 'b6936804ece7929668756f2462b592cc'\r\n      //위치부터 찾아야함\r\n    \r\n      var requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n      };\r\n      // fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=36.5683&lon=126.9778&lang=kr&appid=b6936804ece7929668756f2462b592cc\", requestOptions)\r\n      //   .then(response => response.text())\r\n      //   .then(result => console.log(result))\r\n      //   .catch(error => console.log('error', error));\r\n     const mydata = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${nowlat}&lon=${nowlon}&lang=kr&appid=${API_key}`, requestOptions)\r\n     const result = await mydata.text()\r\n     const parsedata = JSON.parse(result)\r\n     console.log(parsedata)\r\n     nowweather.value = parsedata\r\n     weather1.value = parsedata?.weather[0]?.main\r\n     weather2.value = parsedata?.weather[0]?.description\r\n     nowtemp.value = (parsedata?.main?.temp - 273.15).toFixed(1)\r\n\r\n\r\n  }\r\n//   const url = `https://api.openweathermap.org/data/2.5/weather?lat=${initialLat}&lon=${initialLon}&appid=${API_key}&lang=kr`\r\n//   const getdata = await fetch(url)\r\n//   const result = await getdata\r\n//   console.log(result)\r\n\r\n\r\n// weather()\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.location {\r\n  background-color: #e7af4779;\r\n  height: 100vh;\r\n \r\n}\r\n.twrap{\r\n  padding-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items:center;\r\n  flex-direction: column;\r\n  height: 40vh;\r\n}\r\n.city{\r\n  font-size: 3em;\r\n}\r\n.maint{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  gap:5px\r\n}\r\n</style>","import script from \"./Today_weather.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Today_weather.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Today_weather.vue?vue&type=style&index=0&id=063aeb32&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-063aeb32\"]])\n\nexport default __exports__"],"names":["store","useStore","nowweather","ref","weather1","weather2","nowtemp","date","Date","month","getMonth","day","getDate","nowlat","getters","getlat","nowlon","getlon","onGeoOk","position","lat","coords","latitude","commit","toFixed","lon","longitude","errorGeo","alert","navigator","geolocation","getCurrentPosition","setTimeout","weather","async","API_key","requestOptions","method","redirect","mydata","fetch","result","text","parsedata","JSON","parse","console","log","value","main","description","temp","__exports__"],"sourceRoot":""}